###############################################################################
.SUFFIXES:                         # desativa regras impl√≠citas do GNU make

# ‚Äî Ferramentas --------------------------------------------------------------
PREFIX   ?= arm-none-eabi-
CC       := $(PREFIX)gcc           # GCC cross-compiler
MYCC     := ../../mycc             # seu compilador  ‚Üí .s
QEMU     ?= qemu-system-arm
GDB      ?= gdb-multiarch
LDS      := linker.ld

CFLAGS    = -mcpu=arm7tdmi -marm -nostdlib -Og
LDFLAGS   = -T $(LDS)
QEMUFLAGS = -M virt -nographic -semihosting-config enable=on,target=native        # captura SWI 0x123456

###############################################################################
## 1) Fluxo ‚ÄúMYCC‚Äù  (.c ‚Üí .s ‚Üí .elf ‚Üí run/gdb)
###############################################################################

# ‚Äî 1.1)  .c  ‚Üí  .s  (via MYCC) ------------------------------------------------
%.s : %.c $(MYCC)
	@echo "üõ†  [asm] $< ‚Üí $@"
	$(MYCC) -S $< > $@

# ‚Äî 1.2)  .s  ‚Üí  .elf ----------------------------------------------------------
%.elf : %.s $(LDS)
	@echo "üõ†  [link] $< ‚Üí $@"
	$(CC) $(CFLAGS) $< -o $@ $(LDFLAGS)

# ‚Äî 1.3)  executa --------------------------------------------------------------
%.run : %.elf
	@echo "‚ñ∂Ô∏è   Executando $< ‚Ä¶"
	@$(QEMU) $(QEMUFLAGS) -kernel $< ; echo "üì§ exit=$$?"

# ‚Äî 1.4)  depura√ß√£o (QEMU + GDB) ----------------------------------------------
%.gdb : %.elf
	@echo "üõ†  Debug: abrindo QEMU + GDB"
	@$(QEMU) $(QEMUFLAGS) -S -gdb tcp::1234 -kernel $< & \
	  qpid=$$! ; sleep 0.5 ; \
	  $(GDB) -q $< \
	    -ex "target remote :1234" \
	    -ex "load" \
	    -ex "monitor system_reset" \
	    -ex "tui enable" ; \
	  kill $$qpid >/dev/null 2>&1 || true

###############################################################################
## 2) Fluxo ‚ÄúGCC‚Äù  (.c ‚Üí .gcc.s ‚Üí .gcc.elf ‚Üí run/gdb)
###############################################################################

# ‚Äî 2.1)  .c  ‚Üí  .gcc.s  -------------------------------------------------------
%.gcc.s : %.c
	@echo "üõ†  [asm-gcc] $< ‚Üí $@"
	$(CC) $(CFLAGS) -S $< -o $@

# ‚Äî 2.2)  .gcc.s  ‚Üí  .gcc.elf  -------------------------------------------------
%.gcc.elf : %.gcc.s $(LDS)
	@echo "üõ†  [link-gcc] $< ‚Üí $@"
	$(CC) $(CFLAGS) $< -o $@ $(LDFLAGS)

# ‚Äî 2.3)  executa --------------------------------------------------------------
%.gcc.run : %.gcc.elf
	@echo "‚ñ∂Ô∏è   Executando (GCC) $< ‚Ä¶"
	@$(QEMU) $(QEMUFLAGS) -kernel $< ; echo "üì§ exit=$$?"

# ‚Äî 2.4)  depura√ß√£o (QEMU + GDB) ----------------------------------------------
%.gcc.gdb : %.gcc.elf
	@echo "üõ†  Debug (GCC): abrindo QEMU + GDB"
	@$(QEMU) $(QEMUFLAGS) -S -gdb tcp::1234 -kernel $< & \
	  qpid=$$! ; sleep 0.5 ; \
	  $(GDB) -q $< \
	    -ex "target remote :1234" \
	    -ex "load" \
	    -ex "monitor system_reset" \
	    -ex "tui enable" ; \
	  kill $$qpid >/dev/null 2>&1 || true

###############################################################################
## 3) Metas de conveni√™ncia
###############################################################################
# Arquivos .c passados na linha de comando + extras via FILES=
FILES := $(basename $(filter %.c,$(MAKECMDGOALS))) $(FILES)

.PHONY: run gdb run-gcc gdb-gcc clean

run:     $(addsuffix .run,$(FILES))        # executa sa√≠da do MYCC
gdb:     $(addsuffix .gdb,$(FILES))        # depura sa√≠da do MYCC
run-gcc: $(addsuffix .gcc.run,$(FILES))    # executa sa√≠da do GCC
gdb-gcc: $(addsuffix .gcc.gdb,$(FILES))    # depura sa√≠da do GCC

# Evita que foo.c vire ‚Äútarget‚Äù a construir
$(FILES:%=%.c):

clean:
	rm -f *.s *.elf *.gcc.s *.gcc.elf
###############################################################################
